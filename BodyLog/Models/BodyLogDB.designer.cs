#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BodyLog.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="BodyLogDB")]
	public partial class BodyLogDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAccount(Account instance);
    partial void UpdateAccount(Account instance);
    partial void DeleteAccount(Account instance);
    partial void InsertDishes(Dishes instance);
    partial void UpdateDishes(Dishes instance);
    partial void DeleteDishes(Dishes instance);
    partial void InsertDishes_Categories(Dishes_Categories instance);
    partial void UpdateDishes_Categories(Dishes_Categories instance);
    partial void DeleteDishes_Categories(Dishes_Categories instance);
    partial void InsertFood(Food instance);
    partial void UpdateFood(Food instance);
    partial void DeleteFood(Food instance);
    partial void InsertFood_Categories(Food_Categories instance);
    partial void UpdateFood_Categories(Food_Categories instance);
    partial void DeleteFood_Categories(Food_Categories instance);
    #endregion
		
		public BodyLogDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["BodyLogDBConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public BodyLogDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BodyLogDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BodyLogDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BodyLogDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Account> Accounts
		{
			get
			{
				return this.GetTable<Account>();
			}
		}
		
		public System.Data.Linq.Table<Dishes_Foods> Dishes_Foods
		{
			get
			{
				return this.GetTable<Dishes_Foods>();
			}
		}
		
		public System.Data.Linq.Table<Dishes> Dishes
		{
			get
			{
				return this.GetTable<Dishes>();
			}
		}
		
		public System.Data.Linq.Table<Dishes_Categories> Dishes_Categories
		{
			get
			{
				return this.GetTable<Dishes_Categories>();
			}
		}
		
		public System.Data.Linq.Table<Food> Foods
		{
			get
			{
				return this.GetTable<Food>();
			}
		}
		
		public System.Data.Linq.Table<Food_Categories> Food_Categories
		{
			get
			{
				return this.GetTable<Food_Categories>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Accounts")]
	public partial class Account : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _email;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    #endregion
		
		public Account()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Id", Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class Dishes_Foods
	{
		
		private int _fk_Dishes;
		
		private int _fk_Food;
		
		private float _weight;
		
		public Dishes_Foods()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fk_Dishes")]
		public int fk_Dishes
		{
			get
			{
				return this._fk_Dishes;
			}
			set
			{
				if ((this._fk_Dishes != value))
				{
					this._fk_Dishes = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fk_Food")]
		public int fk_Food
		{
			get
			{
				return this._fk_Food;
			}
			set
			{
				if ((this._fk_Food != value))
				{
					this._fk_Food = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_weight")]
		public float weight
		{
			get
			{
				return this._weight;
			}
			set
			{
				if ((this._weight != value))
				{
					this._weight = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class Dishes : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private System.DateTime _date;
		
		private float _calories;
		
		private int _fkDishes_Categories;
		
		private EntityRef<Dishes_Categories> _Dishes_Categories;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OndateChanging(System.DateTime value);
    partial void OndateChanged();
    partial void OncaloriesChanging(float value);
    partial void OncaloriesChanged();
    partial void OnfkDishes_CategoriesChanging(int value);
    partial void OnfkDishes_CategoriesChanged();
    #endregion
		
		public Dishes()
		{
			this._Dishes_Categories = default(EntityRef<Dishes_Categories>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date")]
		public System.DateTime date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_calories")]
		public float calories
		{
			get
			{
				return this._calories;
			}
			set
			{
				if ((this._calories != value))
				{
					this.OncaloriesChanging(value);
					this.SendPropertyChanging();
					this._calories = value;
					this.SendPropertyChanged("calories");
					this.OncaloriesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fkDishes_Categories")]
		public int fkDishes_Categories
		{
			get
			{
				return this._fkDishes_Categories;
			}
			set
			{
				if ((this._fkDishes_Categories != value))
				{
					if (this._Dishes_Categories.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnfkDishes_CategoriesChanging(value);
					this.SendPropertyChanging();
					this._fkDishes_Categories = value;
					this.SendPropertyChanged("fkDishes_Categories");
					this.OnfkDishes_CategoriesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dishes_Categories_Dishes", Storage="_Dishes_Categories", ThisKey="fkDishes_Categories", OtherKey="id", IsForeignKey=true)]
		public Dishes_Categories Dishes_Categories
		{
			get
			{
				return this._Dishes_Categories.Entity;
			}
			set
			{
				Dishes_Categories previousValue = this._Dishes_Categories.Entity;
				if (((previousValue != value) 
							|| (this._Dishes_Categories.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Dishes_Categories.Entity = null;
						previousValue.Dishes.Remove(this);
					}
					this._Dishes_Categories.Entity = value;
					if ((value != null))
					{
						value.Dishes.Add(this);
						this._fkDishes_Categories = value.id;
					}
					else
					{
						this._fkDishes_Categories = default(int);
					}
					this.SendPropertyChanged("Dishes_Categories");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class Dishes_Categories : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private EntitySet<Dishes> _Dishes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public Dishes_Categories()
		{
			this._Dishes = new EntitySet<Dishes>(new Action<Dishes>(this.attach_Dishes), new Action<Dishes>(this.detach_Dishes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dishes_Categories_Dishes", Storage="_Dishes", ThisKey="id", OtherKey="fkDishes_Categories")]
		public EntitySet<Dishes> Dishes
		{
			get
			{
				return this._Dishes;
			}
			set
			{
				this._Dishes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Dishes(Dishes entity)
		{
			this.SendPropertyChanging();
			entity.Dishes_Categories = this;
		}
		
		private void detach_Dishes(Dishes entity)
		{
			this.SendPropertyChanging();
			entity.Dishes_Categories = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class Food : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _name;
		
		private System.Nullable<double> _calories;
		
		private int _fkFood_Categories;
		
		private EntityRef<Food_Categories> _Food_Categories;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OncaloriesChanging(System.Nullable<double> value);
    partial void OncaloriesChanged();
    partial void OnfkFood_CategoriesChanging(int value);
    partial void OnfkFood_CategoriesChanged();
    #endregion
		
		public Food()
		{
			this._Food_Categories = default(EntityRef<Food_Categories>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Id", Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_calories", DbType="Float")]
		public System.Nullable<double> calories
		{
			get
			{
				return this._calories;
			}
			set
			{
				if ((this._calories != value))
				{
					this.OncaloriesChanging(value);
					this.SendPropertyChanging();
					this._calories = value;
					this.SendPropertyChanged("calories");
					this.OncaloriesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fkFood_Categories")]
		public int fkFood_Categories
		{
			get
			{
				return this._fkFood_Categories;
			}
			set
			{
				if ((this._fkFood_Categories != value))
				{
					if (this._Food_Categories.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnfkFood_CategoriesChanging(value);
					this.SendPropertyChanging();
					this._fkFood_Categories = value;
					this.SendPropertyChanged("fkFood_Categories");
					this.OnfkFood_CategoriesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Food_Categories_Food", Storage="_Food_Categories", ThisKey="fkFood_Categories", OtherKey="id", IsForeignKey=true)]
		public Food_Categories Food_Categories
		{
			get
			{
				return this._Food_Categories.Entity;
			}
			set
			{
				Food_Categories previousValue = this._Food_Categories.Entity;
				if (((previousValue != value) 
							|| (this._Food_Categories.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Food_Categories.Entity = null;
						previousValue.Foods.Remove(this);
					}
					this._Food_Categories.Entity = value;
					if ((value != null))
					{
						value.Foods.Add(this);
						this._fkFood_Categories = value.id;
					}
					else
					{
						this._fkFood_Categories = default(int);
					}
					this.SendPropertyChanged("Food_Categories");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class Food_Categories : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Name;
		
		private EntitySet<Food> _Foods;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Food_Categories()
		{
			this._Foods = new EntitySet<Food>(new Action<Food>(this.attach_Foods), new Action<Food>(this.detach_Foods));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Food_Categories_Food", Storage="_Foods", ThisKey="id", OtherKey="fkFood_Categories")]
		public EntitySet<Food> Foods
		{
			get
			{
				return this._Foods;
			}
			set
			{
				this._Foods.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Foods(Food entity)
		{
			this.SendPropertyChanging();
			entity.Food_Categories = this;
		}
		
		private void detach_Foods(Food entity)
		{
			this.SendPropertyChanging();
			entity.Food_Categories = null;
		}
	}
}
#pragma warning restore 1591
