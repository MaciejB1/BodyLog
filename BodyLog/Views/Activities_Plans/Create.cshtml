@model BodyLog.Models.Global_Model
@{
    ViewBag.Title = "Stwórz trening z ćwiczeń";
}
<h2>Stwórz trening z ćwiczeń</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="">
        <div class="row" style="margin-top: 20px;">
            @Html.LabelFor(model => model.Training.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Training.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Training.Name, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.Training.Date_start, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Training.Date_start, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Training.Date_start, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.Training.Date_end, htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-10">
                @Html.EditorFor(model => model.Training.Date_end, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Training.Date_end, "", new { @class = "text-danger" })
            </div>
            @for (int i = 0; i < Model.Activities_Plans.Count; i++)
            {
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Activities_Plans[i].Time, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Activities_Plans[i].Time, "", new { @class = "text-danger" })
                </div>
                @Html.LabelFor(model => model.Activities_Plans[i].Time, htmlAttributes: new { @class = "control-label col-md-2" })
            }

        </div>
        <table class="table" id="productsAdded">
            <tr> <th class="col-md-2"> Ćwiczenie </th> <th class="col-md-2"> Czas </th> <th class="col-md-2"> Opis </th>  <th> </th></tr>
            @for (int i = 0; i < Model.Activities.Count; i++) 
            {
                <tr data-productAdded=@Model.Activities[i].Id style="display: none;">
                    <td>  @Model.Activities[i].Type </td>
                    
                   
                    <td data-factor=@Model.Activities[i].Description> </td>
                    
                    @Html.HiddenFor(model => model.Activities[i].Id)
                  
                    @Html.HiddenFor(model => model.Activities[i].Description)
                    
                    <td> <button name="removeProductButton" onclick="return false;" class="btn-sm" id=@Model.Activities[i].Id> X </button> </td>
                </tr>
            }
        </table>
    </div>

    <div class="col-md-12" style="margin-bottom: 40px">
        <input type="submit" value="Dodaj" class="btn btn-default" />
    </div>

   



    <div class="row" style="margin-top: 20px">
        <table class="table-condensed">
            <tr> <th> Ćwiczenie </th> <th> Czas </th> <th> Opis </th>  <th> </th></tr>
            @for (int i = 0; i < Model.Activities.Count; i++)
            {

                <tr style="opacity: 1" data-productFromList=@Model.Activities[i].Id>
                    <td>  @Model.Activities[i].Type</td>

                   
                    <td> @Model.Activities[i].Description </td>
                    
                    <td> <button style="display: block" onclick="return false;" name="addDishesButton" class="btn-sm" id=@Model.Activities[i].Id> Dodaj </button> </td>
                </tr>
            }
        </table>
    </div>





    <script src="~/Scripts/createDishes.js"></script>
}
